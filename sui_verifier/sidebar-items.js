window.SIDEBAR_ITEMS = {"constant":[["INIT_FN_NAME",""]],"fn":[["format_signature_token",""],["format_signature_token_struct",""],["resolve_struct",""]],"mod":[["entry_points_verifier",""],["global_storage_access_verifier",""],["id_leak_verifier","Objects whose struct type has key ability represent Sui objects. They have unique IDs that should never be reused. This verifier makes sure that the id field of Sui objects never get leaked. Unpack is the only bytecode that could extract the id field out of a Sui object. From there, we track the flow of the value and make sure it can never get leaked outside of the function. There are four ways it can happen:"],["one_time_witness_verifier","A module can define a one-time witness type, that is a type that is instantiated only once, and this property is enforced by the system. We define a one-time witness type as a struct type that has the same name as the module that defines it but with all the letters capitalized, and possessing certain special properties specified below (please note that by convention, “regular” struct type names are expressed in camel case).  In other words, if a module defines a struct type whose name is the same as the module name, this type MUST possess these special properties, otherwise the module definition will be considered invalid and will be rejected by the validator:"],["private_generics",""],["struct_with_key_verifier","This pass verifies necessary properties for Move Objects, i.e. structs with the `key` ability. The properties checked are"],["verifier","This module contains the public APIs supported by the bytecode verifier."]]};